/*
 * contraints.h
 *
 *  Created on: Apr 5, 2023
 *      Author: cnama
 */

#ifndef INC_CONTRAINTS_H_
#define INC_CONTRAINTS_H_

#include "stm32l4xx_hal.h"

#define NUM_SET 6

enum MODER_MASK_ENUM{ GPIOC_0_MOD_MASK = GPIO_MODER_MODE0, GPIOC_1_MOD_MASK = GPIO_MODER_MODE1,
					  GPIOC_2_MOD_MASK = GPIO_MODER_MODE2, GPIOC_3_MOD_MASK = GPIO_MODER_MODE3};
enum MODER_SET_ENUM{ GPIOC_0_MOD_SET = GPIO_MODER_MODE0_0, GPIOC_1_MOD_SET = GPIO_MODER_MODE1_0,
	  	  	  	  	 GPIOC_2_MOD_SET = GPIO_MODER_MODE2_0, GPIOC_3_MOD_SET = GPIO_MODER_MODE3_0};
enum OTYPER_ENUM{ GPIOC_0_OT_SET = GPIO_OTYPER_OT0_Pos, GPIOC_1_OT_SET = GPIO_OTYPER_OT0_Pos,
				  GPIOC_2_OT_SET = GPIO_OTYPER_OT0_Pos, GPIOC_3_OT_SET = GPIO_OTYPER_OT0_Pos};
enum OSPEEDR_ENUM{ GPIOC_0_SPR_SET = GPIO_OSPEEDR_OSPEED0_Pos, GPIOC_1_SPR_SET = GPIO_OSPEEDR_OSPEED0_Pos,
				   GPIOC_2_SPR_SET = GPIO_OSPEEDR_OSPEED0_Pos, GPIOC_3_SPR_SET = GPIO_OSPEEDR_OSPEED0_Pos};
enum PUPDR_MASK_ENUM{ GPIOC_0_PUPD_MASK = GPIO_PUPDR_PUPD0, GPIOC_1_PUPD_MASK = GPIO_PUPDR_PUPD1,
				 	  GPIOC_2_PUPD_MASK = GPIO_PUPDR_PUPD2, GPIOC_3_PUPD_MASK = GPIO_PUPDR_PUPD3};
enum PUPDR_SET_ENUM{ GPIOC_0_PUPD_SET = GPIO_PUPDR_PUPD0_1, GPIOC_1_PUPD_SET = GPIO_PUPDR_PUPD1_1,
	  	  	  	  	 GPIOC_2_PUPD_SET = GPIO_PUPDR_PUPD2_1, GPIOC_3_PUPD_SET = GPIO_PUPDR_PUPD3_1};
enum ODR_ENUM{ GPIOC_0_ODR_SET = GPIO_ODR_OD0, GPIOC_1_ODR_SET = GPIO_ODR_OD1,
			   GPIOC_2_ODR_SET = GPIO_ODR_OD2, GPIOC_3_ODR_SET = GPIO_ODR_OD3};

uint8_t SETUP_PINS_POS[][NUM_SET] = {
		{GPIOC_0_MOD_MASK, GPIOC_0_MOD_SET, GPIOC_0_OT_SET, GPIOC_0_SPR_SET, GPIOC_0_PUPD_MASK, GPIOC_0_PUPD_SET},
		{GPIOC_1_MOD_MASK, GPIOC_1_MOD_SET, GPIOC_1_OT_SET, GPIOC_1_SPR_SET, GPIOC_1_PUPD_MASK, GPIOC_1_PUPD_SET},
		{GPIOC_2_MOD_MASK, GPIOC_2_MOD_SET, GPIOC_2_OT_SET, GPIOC_2_SPR_SET, GPIOC_2_PUPD_MASK, GPIOC_2_PUPD_SET},
		{GPIOC_3_MOD_MASK, GPIOC_3_MOD_SET, GPIOC_3_OT_SET, GPIOC_3_SPR_SET, GPIOC_3_PUPD_MASK, GPIOC_3_PUPD_SET}
};


#endif /* INC_CONTRAINTS_H_ */
